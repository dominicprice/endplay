# -------------------------------------------
# build and test wheels across on all
# supported python versions and platforms
# -------------------------------------------

name: Build wheels and test

on: [push, workflow_call]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      # Python on Linux requires libjpeg to install the Pillow library, but the container switches
      # between RHM and DEB so first try yum, then try apt-get.
      CIBW_BEFORE_ALL_LINUX: >
        if command -v yum; then
          yum install -y libjpeg-devel;
        elif command -v apt-get; then
          apt-get install -y libjpeg-dev;
        elif command -v apk; then
          apk add jpeg-dev;
        else
          echo "No package manager found for system $(uname -a)";
          exit 1;
        fi

      # Do not build 32-bit wheels for Linux (yet?), as this requires setting up cross-compilation
      # Do not build 32-bit wheels for Windows, as this breaks installation of contourpy (dependency of
      # matplotlib)
      # Do not build pypy on windows due to a bug in building pillow
      CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-* cp311-* cp-312-* pp37-* pp38-* pp39-*"
      CIBW_SKIP: "*_i686 *-win32 pp*-win_amd64"

      # Ensure that installing numpy on mac uses the openblas library, see
      # the issue in https://github.com/numpy/numpy/issues/15947
      CIBW_BEFORE_ALL_MACOS: brew install openblas
      CIBW_BEFORE_TEST_MACOS: OPENBLAS="$(brew --prefix openblas)" pip install numpy

      # cibw automatically sets up the testing environment in a venv so just need to tell it
      # to call pytest in the right directory
      CIBW_TEST_REQUIRES: pytest
      CIBW_TEST_COMMAND: "pytest {project}/tests"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.1
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz
